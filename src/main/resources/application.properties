spring.application.name=medical-clinic

spring.security.user.name=radom
spring.security.user.password=radom123

app.base-uri=${APP_BASE_URI}
server.port=${SERVER_PORT}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${PG_HOST}:${PG_PORT}/${PG_DB}
spring.datasource.username=${PG_USERNAME}
spring.datasource.password=${PG_PASSWORD}
spring.jpa.hibernate.ddl-auto=create-drop
spring.h2.console.enabled=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
server.error.whitelabel.enabled=false

#
#access-token.private=${ACCESS_TOKEN_PRIVATE}
#access-token.public=${ACCESS_TOKEN_PUBLIC}
#refresh-token.private=${REFRESH_TOKEN_PRIVATE}
#refresh-token.public=${REFRESH_TOKEN_PUBLIC}
#
#file.server-path=${FILE_SERVER_PATH}
#file.client-path=${FILE_CLIENT_PATH}
#file.base-url=${FILE_BASE_URL}
#
##OSS CONFIG
#endpoint=${ENDPOINT}
#accessKey=${ACCESS_KEY}
#accessKeySecret=${ACCESS_KEY_SECRET}
#bucketName=${BUCKET_NAME}
#
##LIMIT FILE UPLOAD CONFIG
#spring.servlet.multipart.max-file-size=100MB
#spring.servlet.multipart.max-request-size=100MB
#
#
#
#MAIL CONFIG

# SMTP server port
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
# Login password of the SMTP server
spring.mail.password=${SPRING_MAIL_PASSWORD}
# Enable SMTP authentication
spring.mail.properties.mail.smtp.auth=true
# Enable STARTTLS to upgrade a plain text connection to an encrypted connection using TLS
spring.mail.properties.mail.smtp.starttls.enable=true

#
##FTP CONFIG
#ftp.server=${FTP_SERVER}
#ftp.port=${FTP_PORT}
#ftp.username=${FTP_USER}
#ftp.password=${FTP_PASSWORD}
#
##ftp.remoteDirectory=${FTP_REMOTE_DIRECTORY}
#file.path.localDirectory=${PATH_DIRECTORY}
#
##TELTEGRAM CONFIG
#telegram.bot.token=${TELEGRAM_BOT_TOKEN}
#telegram.bot.username=${TELEGRAM_BOT_USERNAME}
#telegram.bot.chatId=${TELEGRAM_CHAT_ID}
